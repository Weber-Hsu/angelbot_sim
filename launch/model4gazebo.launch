<launch> 
  	<!-- these are the arguments you can pass this launch file, for example paused:=true -->
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>
	
	<!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--arg name="world_name" value="$(find angelbot_sim/worlds/empty.world"/-->
    <arg name="world_name" value="$(find angelbot_sim)/worlds/willowgarage.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable --> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  
  <!-- urdf xml robot description loaded on the Parameter Server-->
	<param name="robot_description" command="$(find xacro)/xacro '$(find angelbot_sim)/modeldescription/urdf/angelbot.xacro'" />
	
	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model angelbot -param robot_description " />
	
	<!-- start robot state publisher -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"></node>
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
		<param name="publish_frequency" type="double" value="50.0"></param>
		</node>
	<node name="odometry_calc" pkg="angelbot_sim" type="odometry_calc"></node>
	<node name="twist2motor" pkg="angelbot_sim" type="twist2motor"></node>
	

		
	<include file="$(find angelbot_sim)/launch/gmapping.launch"></include>
	<include file="$(find angelbot_sim)/launch/move_base.launch"></include>
	
	<!-- turtlebot_teleop_key already has its own built in velocity smoother
  	<node pkg="angelbot" type="angelbot_teleop_key" name="angelbot_teleop_key"  output="screen">
    <param name="scale_linear" value="0.5" type="double"/>
    <param name="scale_angular" value="1.5" type="double"/>
    <remap from="angelbot_teleop_keyboard/cmd_vel" to="/cmd_vel"/>
  	</node --> 
</launch>